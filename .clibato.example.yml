# Example: .clibato.yml
# ======

# The 'contents' section is a list of files to backup/restore.
#
# Each key is a 'backup path' - a relative path representing a unique file.
# The file will be stored at the backup path during the backup process.
#
# Here are some sample entries.
contents:

  # Simply put, the format as follows.
  #
  # Backup path: Must be relative.
  # Source path: See the other examples.
  path/to/backup: /path/to/source

  # Backup path: "$BACKUP/.zshrc"
  # Source path: "$HOME/.zshrc"
  .zshrc:

  # Backup path: "$BACKUP/.bunnyrc"
  # "$HOME/Documents/bunnyrc"
  .bunnyrc: '~/Documents/bunnyrc'

  # Backup path: "$BACKUP/blinky.md"
  # Source path: "/var/www/blinky.md".
  blinky.md: '/var/www/blinky.md'

  # Backup path: "$BACKUP/i/m/chaos.rb"
  # Source path: "$HOME/code/poopify.rb".
  #
  # This will surely cause confusion though.
  i/m/chaos.rb: '~/code/poopify.rb'

# The 'destination' section defines where the backup should be placed.
#
# Mainly, 'path' is the "$BACKUP" mentioned above.
#
# Configure a destination based on the 'destination.*' examples.
# Once done, the examples at 'destination.*' must be removed/commented.
destination:
  type: "directory|repository"
  path: "/backup"

# Example: Directory
#
# Copies files to a backup directory.
destination.directory:
  type: "directory"
  # Absolute path to the directory to store the backup.
  # The directory must exist - it won't be created automatically.
  path: "~/backup"

# Example: Repository
#
# Pushes backups to a Git repository.
destination.repository:
  type: "repository"
  # The in which the backup will be prepared.
  path: "~/backup"
  # URL to a Git repository.
  remote: "git@github.com:USER/SLUG.git"
  # The branch to which to make the backup commit.
  # If the branch doesn't exist, it will be created.
  branch: "main"
  # The name and mail identify the author of the git commit.
  user_name: "John Doe"
  user_mail: "john.doe@example.com"
